// <auto-generated />
using System;
using ConsoleApp1.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleApp1.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240617101833_InitialCreate2")]
    partial class InitialCreate2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ConsoleApp1.Model.CCR", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complaint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("CCR");
                });

            modelBuilder.Entity("ConsoleApp1.Model.CONTACT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerDayPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerDear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEveningPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("CONTACT");
                });

            modelBuilder.Entity("ConsoleApp1.Model.CUSTOMER", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ABN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssociatedDealerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerContactType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DMSCustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ServiceCustomerAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCustomerAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCustomerCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCustomerDayPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCustomerEveningPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCustomerFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCustomerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCustomerMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCustomerPostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCustomerSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCustomerStateCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("ConsoleApp1.Model.HEADER", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentCompletedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentInvoiceDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentOpenDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDENTID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceOrCredit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepairOrderCustomerPayTotalPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceAdvisorEmpIDCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceAdvisorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IDENTID");

                    b.ToTable("header");
                });

            modelBuilder.Entity("ConsoleApp1.Model.IDENT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DateCreate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeCreate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("identifiers");
                });

            modelBuilder.Entity("ConsoleApp1.Model.JOB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DMSJobNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DMSOperationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DMSOperationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JobGOGPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobLabourCOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobLabourPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobMiscellaneousPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobPartsPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobSubletPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobsSundryPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("job");
                });

            modelBuilder.Entity("ConsoleApp1.Model.LABORLINE", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LabourOperationCodeType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("laborline");
                });

            modelBuilder.Entity("ConsoleApp1.Model.MISC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MiscellaneounsCostOfSale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiscellaneousCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiscellaneousDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiscellaneousPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiscellaneousPriceAfterSplit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiscellaneousSplitPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("misc");
                });

            modelBuilder.Entity("ConsoleApp1.Model.PARTLINE", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Count")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PartDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartUnitCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartUnitPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartsBin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartsWarehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelatedVINForThisOrder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("partline");
                });

            modelBuilder.Entity("ConsoleApp1.Model.PRIVACY", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrivacyIndicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivacyType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("privacy");
                });

            modelBuilder.Entity("ConsoleApp1.Model.VEHICLE", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DMSMakeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepairOrderVIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleModel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("vehicle");
                });

            modelBuilder.Entity("ConsoleApp1.Model.CCR", b =>
                {
                    b.HasOne("ConsoleApp1.Model.HEADER", "HEADER")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HEADER");
                });

            modelBuilder.Entity("ConsoleApp1.Model.CONTACT", b =>
                {
                    b.HasOne("ConsoleApp1.Model.HEADER", "HEADER")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HEADER");
                });

            modelBuilder.Entity("ConsoleApp1.Model.CUSTOMER", b =>
                {
                    b.HasOne("ConsoleApp1.Model.HEADER", "HEADER")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HEADER");
                });

            modelBuilder.Entity("ConsoleApp1.Model.HEADER", b =>
                {
                    b.HasOne("ConsoleApp1.Model.IDENT", "IDENT")
                        .WithMany()
                        .HasForeignKey("IDENTID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IDENT");
                });

            modelBuilder.Entity("ConsoleApp1.Model.JOB", b =>
                {
                    b.HasOne("ConsoleApp1.Model.HEADER", "HEADER")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HEADER");
                });

            modelBuilder.Entity("ConsoleApp1.Model.LABORLINE", b =>
                {
                    b.HasOne("ConsoleApp1.Model.HEADER", "HEADER")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HEADER");
                });

            modelBuilder.Entity("ConsoleApp1.Model.MISC", b =>
                {
                    b.HasOne("ConsoleApp1.Model.HEADER", "HEADER")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HEADER");
                });

            modelBuilder.Entity("ConsoleApp1.Model.PARTLINE", b =>
                {
                    b.HasOne("ConsoleApp1.Model.HEADER", "HEADER")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HEADER");
                });

            modelBuilder.Entity("ConsoleApp1.Model.PRIVACY", b =>
                {
                    b.HasOne("ConsoleApp1.Model.HEADER", "HEADER")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HEADER");
                });

            modelBuilder.Entity("ConsoleApp1.Model.VEHICLE", b =>
                {
                    b.HasOne("ConsoleApp1.Model.HEADER", "HEADER")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HEADER");
                });
#pragma warning restore 612, 618
        }
    }
}
